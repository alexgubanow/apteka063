<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveOrders" xml:space="preserve">
    <value>Active orders</value>
  </data>
  <data name="AvailableNow" xml:space="preserve">
    <value>Available now:</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="Choose_order_type" xml:space="preserve">
    <value>Choose order type</value>
  </data>
  <data name="Closed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="DBUpdateFailed" xml:space="preserve">
    <value>database update failed</value>
  </data>
  <data name="DBUpdateFinished" xml:space="preserve">
    <value>database update finished</value>
  </data>
  <data name="Declined" xml:space="preserve">
    <value>Declined</value>
  </data>
  <data name="deleted" xml:space="preserve">
    <value>deleted</value>
  </data>
  <data name="EditOrder" xml:space="preserve">
    <value>Edit the Order</value>
  </data>
  <data name="EmergencyContacts" xml:space="preserve">
    <value>Emergency contacts</value>
  </data>
  <data name="Filling" xml:space="preserve">
    <value>Filling</value>
  </data>
  <data name="Food" xml:space="preserve">
    <value>Food</value>
  </data>
  <data name="GoBack" xml:space="preserve">
    <value>Return back</value>
  </data>
  <data name="GoToMenu" xml:space="preserve">
    <value>Go to the Main menu</value>
  </data>
  <data name="HasBeenRegistered" xml:space="preserve">
    <value>has been registered</value>
  </data>
  <data name="Humaid" xml:space="preserve">
    <value>Humanitarian Aid</value>
  </data>
  <data name="InProgress" xml:space="preserve">
    <value>InProgress</value>
  </data>
  <data name="MainMenu" xml:space="preserve">
    <value>Main menu:</value>
  </data>
  <data name="NeedAdress" xml:space="preserve">
    <value>Need contact address</value>
  </data>
  <data name="NeedContactName" xml:space="preserve">
    <value>Need contact name</value>
  </data>
  <data name="NeedPhone" xml:space="preserve">
    <value>Need contact phone</value>
  </data>
  <data name="NewOrder" xml:space="preserve">
    <value>New order</value>
  </data>
  <data name="NoComment" xml:space="preserve">
    <value>Order without comment</value>
  </data>
  <data name="NotImplemented" xml:space="preserve">
    <value>Not implemented</value>
  </data>
  <data name="No_any_active_orders_found" xml:space="preserve">
    <value>No any active orders found</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="OrderNumber" xml:space="preserve">
    <value>Order №</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="Order_is_empty_please_pick_some" xml:space="preserve">
    <value>Order is empty, please pick some</value>
  </data>
  <data name="Order_received_processing_please_wait" xml:space="preserve">
    <value>Order received, processing, please wait</value>
  </data>
  <data name="pcs" xml:space="preserve">
    <value>pcs</value>
  </data>
  <data name="PickCategory" xml:space="preserve">
    <value>Pick category:</value>
  </data>
  <data name="Pills" xml:space="preserve">
    <value>Pills</value>
  </data>
  <data name="ProceedOrder" xml:space="preserve">
    <value>Proceed the Order</value>
  </data>
  <data name="ProvideDeliveryAddress" xml:space="preserve">
    <value>Please provide the address where order should be shipped</value>
  </data>
  <data name="ProvideOrderComment" xml:space="preserve">
    <value>Please provide the comment for your order</value>
  </data>
  <data name="ProvidePhoneNumber" xml:space="preserve">
    <value>Please provide the phone number of the person who will recieve the help</value>
  </data>
  <data name="ProvideReceiverName" xml:space="preserve">
    <value>Please provide the contact name</value>
  </data>
  <data name="ProvideYourPhoneNumber" xml:space="preserve">
    <value>Please provide the Your phone number</value>
  </data>
  <data name="RemoveThisOrder" xml:space="preserve">
    <value>Remove this order</value>
  </data>
  <data name="ReportActivity" xml:space="preserve">
    <value>Report suspicious activity</value>
  </data>
  <data name="ReportIncident" xml:space="preserve">
    <value>Report incident</value>
  </data>
  <data name="Something_went_wrong_Please_correct" xml:space="preserve">
    <value>Something went wrong, please correct your input</value>
  </data>
  <data name="TakeCare" xml:space="preserve">
    <value>Take care of yourself and loved ones</value>
  </data>
  <data name="Transport" xml:space="preserve">
    <value>Transport</value>
  </data>
  <data name="YourOrderIs" xml:space="preserve">
    <value>Your Order is:</value>
  </data>
  <data name="You_dont_have_orders" xml:space="preserve">
    <value>You don't have orders</value>
  </data>
</root>